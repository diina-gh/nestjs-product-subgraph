# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

directive @key(fields: String!, resolvable: Boolean = true) repeatable on OBJECT | INTERFACE

directive @extends on OBJECT | INTERFACE

directive @external on OBJECT | FIELD_DEFINITION

directive @requires(fields: String!) on FIELD_DEFINITION

directive @provides(fields: String!) on FIELD_DEFINITION

directive @shareable on FIELD_DEFINITION | OBJECT

directive @link(url: String!, import: [link__Import]) on SCHEMA

directive @tag(name: String!) repeatable on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @inaccessible on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @override(from: String!) on FIELD_DEFINITION

type Category {
  id: ID!
  activated: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  desc: String!
  menus: [Menu!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Discount {
  id: ID!
  activated: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  desc: String!
  percent: Float!
  menus: [Menu!]!
}

type Inventory {
  id: ID!
  activated: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  quantity: Float!
  menuId: Float!
  menu: Menu!
}

type Menu {
  id: ID!
  activated: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  desc: String!
  detail: String!
  categoryId: Float!
  category: Category!
  inventoryId: Float!
  inventory: Inventory!
  discountId: Float!
  discount: Discount!
}

type Query {
  menu(id: Float!): MenuResult!
  menus(menuArgs: MenuArgs!): PaginatedMenuResult!
  category(id: Float!): CategoryResult!
  categories(categoryArgs: CategoryArgs!): PaginatedCategoryResult!
  inventory(id: Float!): InventoryResult!
  inventories(inventoryArgs: InventoryArgs!): PaginatedInventoryResult!
  discount(id: Float!): DiscountResult!
  discounts(discountArgs: DiscountArgs!): PaginatedDiscountResult!
}

union MenuResult = Menu | InputError | ServerError

type InputError {
  message: String!
  input: String
  exception: String
}

type ServerError {
  message: String!
  exception: String
}

union PaginatedMenuResult = PaginatedMenu | InputError | ServerError

type PaginatedMenu {
  count: Int!
  hasNext: Boolean!
  menus: [Menu!]!
}

input MenuArgs {
  page: Int = 1
  take: Int = 10
  filter: MenuFilterArgs
  orderBy: MenuOrderArgs
}

input MenuFilterArgs {
  id: Float
  activated: Boolean
  search: SearchrArgs
}

input SearchrArgs {
  searchQuery: String
  searchBy: [String!]
}

input MenuOrderArgs {
  id: Sort
  name: Sort
  desc: Sort
  createdAt: Sort
  updatedAt: Sort
}

"""Define attribute to order from."""
enum Sort {
  ASC
  DESC
}

union CategoryResult = Category | InputError | ServerError

union PaginatedCategoryResult = PaginatedCategory | InputError | ServerError

type PaginatedCategory {
  count: Int!
  hasNext: Boolean!
  categories: [Category!]!
}

input CategoryArgs {
  page: Int = 1
  take: Int = 10
  filter: CategoryFilterArgs
  orderBy: CategoryOrderArgs
}

input CategoryFilterArgs {
  id: Float
  activated: Boolean
  search: SearchrArgs
}

input CategoryOrderArgs {
  id: Sort
  name: Sort
  desc: Sort
  createdAt: Sort
  updatedAt: Sort
}

union InventoryResult = Inventory | InputError | ServerError

union PaginatedInventoryResult = PaginatedInventory | InputError | ServerError

type PaginatedInventory {
  count: Int!
  hasNext: Boolean!
  inventories: [Inventory!]!
}

input InventoryArgs {
  page: Int = 1
  take: Int = 10
  filter: InventoryFilterArgs
  orderBy: InventoryOrderArgs
}

input InventoryFilterArgs {
  id: Float
  activated: Boolean
  search: SearchrArgs
}

input InventoryOrderArgs {
  id: Sort
  name: Sort
  desc: Sort
  createdAt: Sort
  updatedAt: Sort
}

union DiscountResult = Discount | InputError | ServerError

union PaginatedDiscountResult = PaginatedDiscount | InputError | ServerError

type PaginatedDiscount {
  count: Int!
  hasNext: Boolean!
  discounts: [Discount!]!
}

input DiscountArgs {
  page: Int = 1
  take: Int = 10
  filter: DiscountFilterArgs
  orderBy: DiscountOrderArgs
}

input DiscountFilterArgs {
  id: Float
  activated: Boolean
  search: SearchrArgs
}

input DiscountOrderArgs {
  id: Sort
  name: Sort
  desc: Sort
  createdAt: Sort
  updatedAt: Sort
}

type Mutation {
  saveMenu(menuInput: MenuInput!): MenuResult!
  deleteMenu(id: Int!): MenuResult!
  saveCategory(categoryInput: CategoryInput!): CategoryResult!
  deleteCategory(id: Int!): CategoryResult!
  saveInventory(inventoryInput: InventoryInput!): InventoryResult!
  deleteInventory(id: Int!): InventoryResult!
  saveDiscount(discountInput: DiscountInput!): DiscountResult!
  deleteDiscount(id: Int!): DiscountResult!
}

input MenuInput {
  id: Float
  activated: Boolean!
  name: String!
  desc: String!
  detail: String
  quantity: Float
  categoryId: Float!
  discountId: Float
}

input CategoryInput {
  id: Float
  activated: Boolean!
  name: String!
  desc: String!
}

input InventoryInput {
  id: Float
  activated: Boolean!
  quantity: Float!
  menuId: Float!
}

input DiscountInput {
  id: Float
  activated: Boolean!
  name: String!
  desc: String!
  percent: Float!
}

scalar link__Import